"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/prompts/route";
exports.ids = ["app/api/prompts/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprompts%2Froute&page=%2Fapi%2Fprompts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprompts%2Froute.ts&appDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprompts%2Froute&page=%2Fapi%2Fprompts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprompts%2Froute.ts&appDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_vadimcusnir_GitRepo_ai_prompt_templates_packages_ai_prompt_templates_app_api_prompts_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/prompts/route.ts */ \"(rsc)/./app/api/prompts/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/prompts/route\",\n        pathname: \"/api/prompts\",\n        filename: \"route\",\n        bundlePath: \"app/api/prompts/route\"\n    },\n    resolvedPagePath: \"/Users/vadimcusnir/GitRepo/ai-prompt-templates/packages/ai-prompt-templates/app/api/prompts/route.ts\",\n    nextConfigOutput,\n    userland: _Users_vadimcusnir_GitRepo_ai_prompt_templates_packages_ai_prompt_templates_app_api_prompts_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/prompts/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGcHJvbXB0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvbXB0cyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnByb21wdHMlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZ2YWRpbWN1c25pciUyRkdpdFJlcG8lMkZhaS1wcm9tcHQtdGVtcGxhdGVzJTJGcGFja2FnZXMlMkZhaS1wcm9tcHQtdGVtcGxhdGVzJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnZhZGltY3VzbmlyJTJGR2l0UmVwbyUyRmFpLXByb21wdC10ZW1wbGF0ZXMlMkZwYWNrYWdlcyUyRmFpLXByb21wdC10ZW1wbGF0ZXMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ29EO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktcHJvbXB0LXRlbXBsYXRlcy8/ZGJhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvdmFkaW1jdXNuaXIvR2l0UmVwby9haS1wcm9tcHQtdGVtcGxhdGVzL3BhY2thZ2VzL2FpLXByb21wdC10ZW1wbGF0ZXMvYXBwL2FwaS9wcm9tcHRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9tcHRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvbXB0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJvbXB0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy92YWRpbWN1c25pci9HaXRSZXBvL2FpLXByb21wdC10ZW1wbGF0ZXMvcGFja2FnZXMvYWktcHJvbXB0LXRlbXBsYXRlcy9hcHAvYXBpL3Byb21wdHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3Byb21wdHMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprompts%2Froute&page=%2Fapi%2Fprompts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprompts%2Froute.ts&appDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/prompts/route.ts":
/*!**********************************!*\
  !*** ./app/api/prompts/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_access_gating__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/access-gating */ \"(rsc)/./lib/access-gating.ts\");\n/* harmony import */ var _lib_rate_limit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/rate-limit */ \"(rsc)/./lib/rate-limit.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/validation */ \"(rsc)/./lib/validation.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/logger */ \"(rsc)/./lib/logger.ts\");\n\n\n\n\n\n// Mock data pentru dezvoltare - va fi înlocuit cu tabela prompts în producție\nconst MOCK_PROMPTS = [\n    {\n        id: 1,\n        title: \"Cognitive Depth Analysis Framework\",\n        slug: \"cognitive-depth-analysis-framework\",\n        preview_content: \"Advanced framework for analyzing cognitive depth in AI responses with multi-layered assessment capabilities\",\n        full_content: \"This comprehensive framework provides systematic approaches to evaluate and enhance the cognitive depth of AI-generated content...\",\n        cognitive_category: \"deep_analysis\",\n        required_tier: \"master\",\n        quality_score: 9,\n        digital_root: 2,\n        is_published: true,\n        created_at: \"2024-12-15T10:00:00Z\",\n        updated_at: \"2024-12-15T10:00:00Z\"\n    },\n    {\n        id: 2,\n        title: \"Consciousness Mapping Protocol\",\n        slug: \"consciousness-mapping-protocol\",\n        preview_content: \"Framework for mapping consciousness patterns in AI interactions and self-awareness\",\n        full_content: \"This protocol enables systematic mapping of consciousness patterns in AI systems...\",\n        cognitive_category: \"consciousness_mapping\",\n        required_tier: \"architect\",\n        quality_score: 10,\n        digital_root: 2,\n        is_published: true,\n        created_at: \"2024-12-14T10:00:00Z\",\n        updated_at: \"2024-12-14T10:00:00Z\"\n    },\n    {\n        id: 3,\n        title: \"Meaning Engineering System\",\n        slug: \"meaning-engineering-system\",\n        preview_content: \"Systematic approach to engineering meaning in AI prompts through progressive concept building\",\n        full_content: \"This system provides structured methods for building meaningful AI interactions...\",\n        cognitive_category: \"meaning_engineering\",\n        required_tier: \"initiate\",\n        quality_score: 7,\n        digital_root: 2,\n        is_published: true,\n        created_at: \"2024-12-13T10:00:00Z\",\n        updated_at: \"2024-12-13T10:00:00Z\"\n    },\n    {\n        id: 4,\n        title: \"Advanced Systems Integration\",\n        slug: \"advanced-systems-integration\",\n        preview_content: \"Comprehensive framework for integrating multiple AI systems with cognitive coherence\",\n        full_content: \"This framework enables seamless integration of multiple AI systems...\",\n        cognitive_category: \"advanced_systems\",\n        required_tier: \"master\",\n        quality_score: 8,\n        digital_root: 2,\n        is_published: true,\n        created_at: \"2024-12-12T10:00:00Z\",\n        updated_at: \"2024-12-12T10:00:00Z\"\n    }\n];\n// Rate limiting pentru endpoint-ul de prompt-uri\nconst rateLimitedHandler = (0,_lib_rate_limit__WEBPACK_IMPORTED_MODULE_2__.withRateLimit)(_lib_rate_limit__WEBPACK_IMPORTED_MODULE_2__.RATE_LIMIT_CONFIGS.api, (request)=>{\n    // Extract IP address for rate limiting\n    const forwarded = request.headers.get(\"x-forwarded-for\");\n    const ip = forwarded ? forwarded.split(\",\")[0] : \"unknown\";\n    return `prompts_get:${ip}`;\n})(async (request)=>{\n    const startTime = Date.now();\n    try {\n        // Pentru dezvoltare, folosim mock data\n        // În producție, va fi înlocuit cu:\n        // const supabase = createServiceClient()\n        // const { searchParams } = new URL(request.url)\n        // let query = supabase.from('prompts').select('*').eq('is_published', true)\n        const { searchParams } = new URL(request.url);\n        const category = searchParams.get(\"category\");\n        const search = searchParams.get(\"search\");\n        const tier = searchParams.get(\"tier\") || \"free\";\n        // Validare parametri de căutare\n        const searchValidation = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_3__.validateAndSanitize)(_lib_validation__WEBPACK_IMPORTED_MODULE_3__.SearchSchema, {\n            search: search || undefined,\n            category: category || undefined,\n            tier: tier || \"free\",\n            difficulty: searchParams.get(\"difficulty\") || undefined,\n            minPrice: searchParams.get(\"minPrice\") ? parseInt(searchParams.get(\"minPrice\")) : undefined,\n            maxPrice: searchParams.get(\"maxPrice\") ? parseInt(searchParams.get(\"maxPrice\")) : undefined,\n            minScore: searchParams.get(\"minScore\") ? parseInt(searchParams.get(\"minScore\")) : undefined,\n            maxScore: searchParams.get(\"maxScore\") ? parseInt(searchParams.get(\"maxScore\")) : undefined\n        });\n        if (!searchValidation.success) {\n            const errors = searchValidation.errors;\n            (0,_lib_logger__WEBPACK_IMPORTED_MODULE_4__.logSecurity)(\"Invalid search parameters\", {\n                params: searchParams.toString(),\n                errors\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid search parameters\",\n                details: errors\n            }, {\n                status: 400\n            });\n        }\n        // Filtrare mock data\n        let filteredPrompts = [\n            ...MOCK_PROMPTS\n        ];\n        if (category) {\n            filteredPrompts = filteredPrompts.filter((prompt)=>prompt.cognitive_category === category);\n        }\n        if (search) {\n            const searchLower = search.toLowerCase();\n            filteredPrompts = filteredPrompts.filter((prompt)=>prompt.title.toLowerCase().includes(searchLower) || prompt.preview_content.toLowerCase().includes(searchLower));\n        }\n        // Apply access gating\n        const accessiblePrompts = filteredPrompts.map((prompt)=>{\n            const { content, hasFullAccess } = (0,_lib_access_gating__WEBPACK_IMPORTED_MODULE_1__.getAccessibleContent)(prompt.full_content, tier, prompt.required_tier);\n            return {\n                ...prompt,\n                content,\n                hasFullAccess,\n                full_content: hasFullAccess ? prompt.full_content : undefined\n            };\n        });\n        // Simulează o întârziere pentru a imita un API real\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        const duration = Date.now() - startTime;\n        _lib_logger__WEBPACK_IMPORTED_MODULE_4__.logger.performance(\"GET /api/prompts\", duration, {\n            count: accessiblePrompts.length,\n            tier,\n            category: category || \"all\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            prompts: accessiblePrompts\n        });\n    } catch (error) {\n        const duration = Date.now() - startTime;\n        (0,_lib_logger__WEBPACK_IMPORTED_MODULE_4__.logError)(\"Unexpected error in GET /api/prompts\", {\n            duration,\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n});\nconst GET = rateLimitedHandler;\nconst POST = (0,_lib_rate_limit__WEBPACK_IMPORTED_MODULE_2__.withRateLimit)(_lib_rate_limit__WEBPACK_IMPORTED_MODULE_2__.RATE_LIMIT_CONFIGS.api, (request)=>{\n    // Extract IP address for rate limiting\n    const forwarded = request.headers.get(\"x-forwarded-for\");\n    const ip = forwarded ? forwarded.split(\",\")[0] : \"unknown\";\n    return `prompts_post:${ip}`;\n})(async (request)=>{\n    const startTime = Date.now();\n    try {\n        // Pentru dezvoltare, simulăm crearea unui prompt\n        // În producție, va fi înlocuit cu:\n        // const supabase = createServiceClient()\n        // Verificare Content-Type\n        const contentType = request.headers.get(\"content-type\");\n        if (!contentType || !contentType.includes(\"application/json\")) {\n            (0,_lib_logger__WEBPACK_IMPORTED_MODULE_4__.logSecurity)(\"Invalid content type\", {\n                contentType\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Content-Type must be application/json\"\n            }, {\n                status: 400\n            });\n        }\n        const promptData = await request.json();\n        // Validare strictă a datelor\n        const validation = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_3__.validateAndSanitize)(_lib_validation__WEBPACK_IMPORTED_MODULE_3__.PromptSchema, promptData);\n        if (!validation.success) {\n            const errors = validation.errors;\n            (0,_lib_logger__WEBPACK_IMPORTED_MODULE_4__.logSecurity)(\"Invalid prompt data\", {\n                errors,\n                dataKeys: Object.keys(promptData)\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid prompt data\",\n                details: errors\n            }, {\n                status: 400\n            });\n        }\n        const sanitizedData = validation.data;\n        // Generate slug from title\n        const slug = sanitizedData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\").replace(/^-+|-+$/g, \"\");\n        // Set defaults\n        const dataToInsert = {\n            ...sanitizedData,\n            slug,\n            digital_root: 2,\n            required_tier: sanitizedData.required_tier || \"explorer\",\n            is_published: sanitizedData.is_published || false,\n            quality_score: sanitizedData.quality_score || 5\n        };\n        // Simulează crearea unui prompt nou\n        const newPrompt = {\n            id: MOCK_PROMPTS.length + 1,\n            ...dataToInsert,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n        const duration = Date.now() - startTime;\n        _lib_logger__WEBPACK_IMPORTED_MODULE_4__.logger.performance(\"POST /api/prompts\", duration, {\n            promptId: newPrompt.id,\n            title: newPrompt.title\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            prompt: newPrompt\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        const duration = Date.now() - startTime;\n        (0,_lib_logger__WEBPACK_IMPORTED_MODULE_4__.logError)(\"Unexpected error in POST /api/prompts\", {\n            duration,\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/prompts/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/access-gating.ts":
/*!******************************!*\
  !*** ./lib/access-gating.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PREVIEW_PERCENTAGES: () => (/* binding */ PREVIEW_PERCENTAGES),\n/* harmony export */   TIER_HIERARCHY: () => (/* binding */ TIER_HIERARCHY),\n/* harmony export */   canAccessPrompt: () => (/* binding */ canAccessPrompt),\n/* harmony export */   getAccessibleContent: () => (/* binding */ getAccessibleContent),\n/* harmony export */   getTierBenefits: () => (/* binding */ getTierBenefits),\n/* harmony export */   getTierUpgradeMessage: () => (/* binding */ getTierUpgradeMessage)\n/* harmony export */ });\nconst TIER_HIERARCHY = {\n    free: 0,\n    explorer: 1,\n    architect: 2,\n    initiate: 3,\n    master: 4,\n    elite: 5\n};\nconst PREVIEW_PERCENTAGES = {\n    free: 10,\n    explorer: 20,\n    architect: 40,\n    initiate: 70,\n    master: 90,\n    elite: 100\n};\nfunction getAccessibleContent(fullContent, userTier, requiredTier) {\n    const hasFullAccess = TIER_HIERARCHY[userTier] >= TIER_HIERARCHY[requiredTier];\n    if (hasFullAccess) {\n        return {\n            content: fullContent,\n            hasFullAccess: true\n        };\n    }\n    const previewPercentage = PREVIEW_PERCENTAGES[userTier];\n    const words = fullContent.split(\" \");\n    const previewWordCount = Math.floor(words.length * (previewPercentage / 100));\n    const previewContent = words.slice(0, previewWordCount).join(\" \");\n    return {\n        content: previewContent + \"...\\n\\n\\uD83D\\uDD12 **Upgrade to see full content**\",\n        hasFullAccess: false\n    };\n}\nfunction canAccessPrompt(userTier, requiredTier) {\n    return TIER_HIERARCHY[userTier] >= TIER_HIERARCHY[requiredTier];\n}\nfunction getTierUpgradeMessage(userTier, requiredTier) {\n    if (canAccessPrompt(userTier, requiredTier)) {\n        return \"\";\n    }\n    const tierNames = {\n        free: \"Free\",\n        explorer: \"Explorer\",\n        architect: \"Architect\",\n        initiate: \"Initiate\",\n        master: \"Master\",\n        elite: \"Elite\"\n    };\n    return `🔒 Upgrade to ${tierNames[requiredTier]} tier to access this content`;\n}\nfunction getTierBenefits(userTier) {\n    const benefits = {\n        free: [\n            \"Access to basic cognitive frameworks\",\n            \"10% preview of advanced content\",\n            \"Community access\"\n        ],\n        explorer: [\n            \"Access to basic cognitive frameworks\",\n            \"20% preview of advanced content\",\n            \"Community access\"\n        ],\n        architect: [\n            \"Access to intermediate frameworks\",\n            \"40% preview of expert content\",\n            \"Priority community access\",\n            \"Video tutorials\"\n        ],\n        initiate: [\n            \"Access to professional frameworks\",\n            \"70% preview of master content\",\n            \"VIP community access\",\n            \"Live workshops\",\n            \"Priority support\"\n        ],\n        master: [\n            \"Access to advanced frameworks\",\n            \"90% preview of elite content\",\n            \"VIP community access\",\n            \"Live workshops\",\n            \"Priority support\"\n        ],\n        elite: [\n            \"Unlimited access to all content\",\n            \"100% content access\",\n            \"Exclusive elite-level frameworks\",\n            \"1-on-1 consultation sessions\",\n            \"Custom framework development\",\n            \"White-label solutions\"\n        ]\n    };\n    return benefits[userTier] || benefits.free;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYWNjZXNzLWdhdGluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFTyxNQUFNQSxpQkFBNkM7SUFDeERDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxXQUFXO0lBQ1hDLFVBQVU7SUFDVkMsUUFBUTtJQUNSQyxPQUFPO0FBQ1QsRUFBQztBQUVNLE1BQU1DLHNCQUFrRDtJQUM3RE4sTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLFdBQVc7SUFDWEMsVUFBVTtJQUNWQyxRQUFRO0lBQ1JDLE9BQU87QUFDVCxFQUFDO0FBRU0sU0FBU0UscUJBQ2RDLFdBQW1CLEVBQ25CQyxRQUFvQixFQUNwQkMsWUFBd0I7SUFFeEIsTUFBTUMsZ0JBQWdCWixjQUFjLENBQUNVLFNBQVMsSUFBSVYsY0FBYyxDQUFDVyxhQUFhO0lBRTlFLElBQUlDLGVBQWU7UUFDakIsT0FBTztZQUFFQyxTQUFTSjtZQUFhRyxlQUFlO1FBQUs7SUFDckQ7SUFFQSxNQUFNRSxvQkFBb0JQLG1CQUFtQixDQUFDRyxTQUFTO0lBQ3ZELE1BQU1LLFFBQVFOLFlBQVlPLEtBQUssQ0FBQztJQUNoQyxNQUFNQyxtQkFBbUJDLEtBQUtDLEtBQUssQ0FBQ0osTUFBTUssTUFBTSxHQUFJTixDQUFBQSxvQkFBb0IsR0FBRTtJQUMxRSxNQUFNTyxpQkFBaUJOLE1BQU1PLEtBQUssQ0FBQyxHQUFHTCxrQkFBa0JNLElBQUksQ0FBQztJQUU3RCxPQUFPO1FBQ0xWLFNBQVNRLGlCQUFpQjtRQUMxQlQsZUFBZTtJQUNqQjtBQUNGO0FBRU8sU0FBU1ksZ0JBQWdCZCxRQUFvQixFQUFFQyxZQUF3QjtJQUM1RSxPQUFPWCxjQUFjLENBQUNVLFNBQVMsSUFBSVYsY0FBYyxDQUFDVyxhQUFhO0FBQ2pFO0FBRU8sU0FBU2Msc0JBQXNCZixRQUFvQixFQUFFQyxZQUF3QjtJQUNsRixJQUFJYSxnQkFBZ0JkLFVBQVVDLGVBQWU7UUFDM0MsT0FBTztJQUNUO0lBRUEsTUFBTWUsWUFBWTtRQUNoQnpCLE1BQU07UUFDTkMsVUFBVTtRQUNWQyxXQUFXO1FBQ1hDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxPQUFPO0lBQ1Q7SUFFQSxPQUFPLENBQUMsY0FBYyxFQUFFb0IsU0FBUyxDQUFDZixhQUFhLENBQUMsNEJBQTRCLENBQUM7QUFDL0U7QUFFTyxTQUFTZ0IsZ0JBQWdCakIsUUFBb0I7SUFDbEQsTUFBTWtCLFdBQVc7UUFDZjNCLE1BQU07WUFDSjtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsV0FBVztZQUNUO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtZQUNSO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxRQUFRO1lBQ047WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLE9BQU87WUFDTDtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7U0FDRDtJQUNIO0lBRUEsT0FBT3NCLFFBQVEsQ0FBQ2xCLFNBQVMsSUFBSWtCLFNBQVMzQixJQUFJO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktcHJvbXB0LXRlbXBsYXRlcy8uL2xpYi9hY2Nlc3MtZ2F0aW5nLnRzPzE4NTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQWNjZXNzVGllciA9ICdmcmVlJyB8ICdleHBsb3JlcicgfCAnYXJjaGl0ZWN0JyB8ICdpbml0aWF0ZScgfCAnbWFzdGVyJyB8ICdlbGl0ZSdcblxuZXhwb3J0IGNvbnN0IFRJRVJfSElFUkFSQ0hZOiBSZWNvcmQ8QWNjZXNzVGllciwgbnVtYmVyPiA9IHtcbiAgZnJlZTogMCxcbiAgZXhwbG9yZXI6IDEsXG4gIGFyY2hpdGVjdDogMixcbiAgaW5pdGlhdGU6IDMsXG4gIG1hc3RlcjogNCxcbiAgZWxpdGU6IDVcbn1cblxuZXhwb3J0IGNvbnN0IFBSRVZJRVdfUEVSQ0VOVEFHRVM6IFJlY29yZDxBY2Nlc3NUaWVyLCBudW1iZXI+ID0ge1xuICBmcmVlOiAxMCxcbiAgZXhwbG9yZXI6IDIwLFxuICBhcmNoaXRlY3Q6IDQwLFxuICBpbml0aWF0ZTogNzAsXG4gIG1hc3RlcjogOTAsXG4gIGVsaXRlOiAxMDBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFjY2Vzc2libGVDb250ZW50KFxuICBmdWxsQ29udGVudDogc3RyaW5nLFxuICB1c2VyVGllcjogQWNjZXNzVGllcixcbiAgcmVxdWlyZWRUaWVyOiBBY2Nlc3NUaWVyXG4pOiB7IGNvbnRlbnQ6IHN0cmluZzsgaGFzRnVsbEFjY2VzczogYm9vbGVhbiB9IHtcbiAgY29uc3QgaGFzRnVsbEFjY2VzcyA9IFRJRVJfSElFUkFSQ0hZW3VzZXJUaWVyXSA+PSBUSUVSX0hJRVJBUkNIWVtyZXF1aXJlZFRpZXJdXG4gIFxuICBpZiAoaGFzRnVsbEFjY2Vzcykge1xuICAgIHJldHVybiB7IGNvbnRlbnQ6IGZ1bGxDb250ZW50LCBoYXNGdWxsQWNjZXNzOiB0cnVlIH1cbiAgfVxuXG4gIGNvbnN0IHByZXZpZXdQZXJjZW50YWdlID0gUFJFVklFV19QRVJDRU5UQUdFU1t1c2VyVGllcl1cbiAgY29uc3Qgd29yZHMgPSBmdWxsQ29udGVudC5zcGxpdCgnICcpXG4gIGNvbnN0IHByZXZpZXdXb3JkQ291bnQgPSBNYXRoLmZsb29yKHdvcmRzLmxlbmd0aCAqIChwcmV2aWV3UGVyY2VudGFnZSAvIDEwMCkpXG4gIGNvbnN0IHByZXZpZXdDb250ZW50ID0gd29yZHMuc2xpY2UoMCwgcHJldmlld1dvcmRDb3VudCkuam9pbignICcpXG4gIFxuICByZXR1cm4geyBcbiAgICBjb250ZW50OiBwcmV2aWV3Q29udGVudCArICcuLi5cXG5cXG7wn5SSICoqVXBncmFkZSB0byBzZWUgZnVsbCBjb250ZW50KionLCBcbiAgICBoYXNGdWxsQWNjZXNzOiBmYWxzZSBcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FuQWNjZXNzUHJvbXB0KHVzZXJUaWVyOiBBY2Nlc3NUaWVyLCByZXF1aXJlZFRpZXI6IEFjY2Vzc1RpZXIpOiBib29sZWFuIHtcbiAgcmV0dXJuIFRJRVJfSElFUkFSQ0hZW3VzZXJUaWVyXSA+PSBUSUVSX0hJRVJBUkNIWVtyZXF1aXJlZFRpZXJdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRUaWVyVXBncmFkZU1lc3NhZ2UodXNlclRpZXI6IEFjY2Vzc1RpZXIsIHJlcXVpcmVkVGllcjogQWNjZXNzVGllcik6IHN0cmluZyB7XG4gIGlmIChjYW5BY2Nlc3NQcm9tcHQodXNlclRpZXIsIHJlcXVpcmVkVGllcikpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuICBcbiAgY29uc3QgdGllck5hbWVzID0ge1xuICAgIGZyZWU6ICdGcmVlJyxcbiAgICBleHBsb3JlcjogJ0V4cGxvcmVyJyxcbiAgICBhcmNoaXRlY3Q6ICdBcmNoaXRlY3QnLCBcbiAgICBpbml0aWF0ZTogJ0luaXRpYXRlJyxcbiAgICBtYXN0ZXI6ICdNYXN0ZXInLFxuICAgIGVsaXRlOiAnRWxpdGUnXG4gIH1cbiAgXG4gIHJldHVybiBg8J+UkiBVcGdyYWRlIHRvICR7dGllck5hbWVzW3JlcXVpcmVkVGllcl19IHRpZXIgdG8gYWNjZXNzIHRoaXMgY29udGVudGBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRpZXJCZW5lZml0cyh1c2VyVGllcjogQWNjZXNzVGllcik6IHN0cmluZ1tdIHtcbiAgY29uc3QgYmVuZWZpdHMgPSB7XG4gICAgZnJlZTogW1xuICAgICAgJ0FjY2VzcyB0byBiYXNpYyBjb2duaXRpdmUgZnJhbWV3b3JrcycsXG4gICAgICAnMTAlIHByZXZpZXcgb2YgYWR2YW5jZWQgY29udGVudCcsXG4gICAgICAnQ29tbXVuaXR5IGFjY2VzcydcbiAgICBdLFxuICAgIGV4cGxvcmVyOiBbXG4gICAgICAnQWNjZXNzIHRvIGJhc2ljIGNvZ25pdGl2ZSBmcmFtZXdvcmtzJyxcbiAgICAgICcyMCUgcHJldmlldyBvZiBhZHZhbmNlZCBjb250ZW50JyxcbiAgICAgICdDb21tdW5pdHkgYWNjZXNzJ1xuICAgIF0sXG4gICAgYXJjaGl0ZWN0OiBbXG4gICAgICAnQWNjZXNzIHRvIGludGVybWVkaWF0ZSBmcmFtZXdvcmtzJyxcbiAgICAgICc0MCUgcHJldmlldyBvZiBleHBlcnQgY29udGVudCcsXG4gICAgICAnUHJpb3JpdHkgY29tbXVuaXR5IGFjY2VzcycsXG4gICAgICAnVmlkZW8gdHV0b3JpYWxzJ1xuICAgIF0sXG4gICAgaW5pdGlhdGU6IFtcbiAgICAgICdBY2Nlc3MgdG8gcHJvZmVzc2lvbmFsIGZyYW1ld29ya3MnLFxuICAgICAgJzcwJSBwcmV2aWV3IG9mIG1hc3RlciBjb250ZW50JyxcbiAgICAgICdWSVAgY29tbXVuaXR5IGFjY2VzcycsXG4gICAgICAnTGl2ZSB3b3Jrc2hvcHMnLFxuICAgICAgJ1ByaW9yaXR5IHN1cHBvcnQnXG4gICAgXSxcbiAgICBtYXN0ZXI6IFtcbiAgICAgICdBY2Nlc3MgdG8gYWR2YW5jZWQgZnJhbWV3b3JrcycsXG4gICAgICAnOTAlIHByZXZpZXcgb2YgZWxpdGUgY29udGVudCcsXG4gICAgICAnVklQIGNvbW11bml0eSBhY2Nlc3MnLFxuICAgICAgJ0xpdmUgd29ya3Nob3BzJyxcbiAgICAgICdQcmlvcml0eSBzdXBwb3J0J1xuICAgIF0sXG4gICAgZWxpdGU6IFtcbiAgICAgICdVbmxpbWl0ZWQgYWNjZXNzIHRvIGFsbCBjb250ZW50JyxcbiAgICAgICcxMDAlIGNvbnRlbnQgYWNjZXNzJyxcbiAgICAgICdFeGNsdXNpdmUgZWxpdGUtbGV2ZWwgZnJhbWV3b3JrcycsXG4gICAgICAnMS1vbi0xIGNvbnN1bHRhdGlvbiBzZXNzaW9ucycsXG4gICAgICAnQ3VzdG9tIGZyYW1ld29yayBkZXZlbG9wbWVudCcsXG4gICAgICAnV2hpdGUtbGFiZWwgc29sdXRpb25zJ1xuICAgIF1cbiAgfVxuICBcbiAgcmV0dXJuIGJlbmVmaXRzW3VzZXJUaWVyXSB8fCBiZW5lZml0cy5mcmVlXG59XG4iXSwibmFtZXMiOlsiVElFUl9ISUVSQVJDSFkiLCJmcmVlIiwiZXhwbG9yZXIiLCJhcmNoaXRlY3QiLCJpbml0aWF0ZSIsIm1hc3RlciIsImVsaXRlIiwiUFJFVklFV19QRVJDRU5UQUdFUyIsImdldEFjY2Vzc2libGVDb250ZW50IiwiZnVsbENvbnRlbnQiLCJ1c2VyVGllciIsInJlcXVpcmVkVGllciIsImhhc0Z1bGxBY2Nlc3MiLCJjb250ZW50IiwicHJldmlld1BlcmNlbnRhZ2UiLCJ3b3JkcyIsInNwbGl0IiwicHJldmlld1dvcmRDb3VudCIsIk1hdGgiLCJmbG9vciIsImxlbmd0aCIsInByZXZpZXdDb250ZW50Iiwic2xpY2UiLCJqb2luIiwiY2FuQWNjZXNzUHJvbXB0IiwiZ2V0VGllclVwZ3JhZGVNZXNzYWdlIiwidGllck5hbWVzIiwiZ2V0VGllckJlbmVmaXRzIiwiYmVuZWZpdHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/access-gating.ts\n");

/***/ }),

/***/ "(rsc)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   logDebug: () => (/* binding */ logDebug),\n/* harmony export */   logError: () => (/* binding */ logError),\n/* harmony export */   logInfo: () => (/* binding */ logInfo),\n/* harmony export */   logPerformance: () => (/* binding */ logPerformance),\n/* harmony export */   logSecurity: () => (/* binding */ logSecurity),\n/* harmony export */   logWarn: () => (/* binding */ logWarn),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   replaceConsoleLogs: () => (/* binding */ replaceConsoleLogs)\n/* harmony export */ });\n// Logger securizat pentru production\nvar LogLevel;\n(function(LogLevel) {\n    LogLevel[\"ERROR\"] = \"error\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"DEBUG\"] = \"debug\";\n})(LogLevel || (LogLevel = {}));\nclass SecureLogger {\n    shouldLog(level) {\n        if (this.isDevelopment) return true;\n        // În production, logăm doar ERROR și WARN\n        if (this.isProduction) {\n            return level === \"error\" || level === \"warn\";\n        }\n        return true;\n    }\n    formatMessage(entry) {\n        const timestamp = entry.timestamp;\n        const level = entry.level.toUpperCase();\n        const message = entry.message;\n        const context = entry.context ? ` | Context: ${JSON.stringify(entry.context)}` : \"\";\n        const error = entry.error ? ` | Error: ${entry.error.message}` : \"\";\n        return `[${timestamp}] ${level}: ${message}${context}${error}`;\n    }\n    addToBuffer(entry) {\n        this.logBuffer.push(entry);\n        if (this.logBuffer.length > this.maxBufferSize) {\n            this.logBuffer.shift();\n        }\n    }\n    async sendToExternalService(entry) {\n        // În viitor, implementați integrarea cu servicii externe de logging\n        // cum ar fi Sentry, LogRocket, sau propriul serviciu\n        if (this.isProduction && entry.level === \"error\") {\n            try {\n                // Exemplu: trimitere către endpoint de logging\n                await fetch(\"/api/logs\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(entry)\n                });\n            } catch (error) {\n                // Fallback la console.error dacă logging-ul extern eșuează\n                console.error(\"Failed to send log to external service:\", error);\n            }\n        }\n    }\n    error(message, context, error) {\n        const entry = {\n            level: \"error\",\n            message,\n            timestamp: new Date().toISOString(),\n            context,\n            error\n        };\n        this.addToBuffer(entry);\n        if (this.shouldLog(\"error\")) {\n            console.error(this.formatMessage(entry));\n        }\n        this.sendToExternalService(entry);\n    }\n    warn(message, context) {\n        const entry = {\n            level: \"warn\",\n            message,\n            timestamp: new Date().toISOString(),\n            context\n        };\n        this.addToBuffer(entry);\n        if (this.shouldLog(\"warn\")) {\n            console.warn(this.formatMessage(entry));\n        }\n    }\n    info(message, context) {\n        const entry = {\n            level: \"info\",\n            message,\n            timestamp: new Date().toISOString(),\n            context\n        };\n        this.addToBuffer(entry);\n        if (this.shouldLog(\"info\")) {\n            console.info(this.formatMessage(entry));\n        }\n    }\n    debug(message, context) {\n        const entry = {\n            level: \"debug\",\n            message,\n            timestamp: new Date().toISOString(),\n            context\n        };\n        this.addToBuffer(entry);\n        if (this.shouldLog(\"debug\")) {\n            console.debug(this.formatMessage(entry));\n        }\n    }\n    // Funcție pentru logging de securitate\n    security(message, context) {\n        const entry = {\n            level: \"warn\",\n            message: `SECURITY: ${message}`,\n            timestamp: new Date().toISOString(),\n            context\n        };\n        this.addToBuffer(entry);\n        // Logăm întotdeauna mesajele de securitate\n        console.warn(this.formatMessage(entry));\n        // Trimitem la serviciul extern pentru audit\n        this.sendToExternalService(entry);\n    }\n    // Funcție pentru logging de performanță\n    performance(operation, duration, context) {\n        const entry = {\n            level: \"info\",\n            message: `PERFORMANCE: ${operation} took ${duration}ms`,\n            timestamp: new Date().toISOString(),\n            context\n        };\n        this.addToBuffer(entry);\n        if (this.shouldLog(\"info\")) {\n            console.info(this.formatMessage(entry));\n        }\n    }\n    // Funcție pentru obținerea logurilor din buffer\n    getLogs(level) {\n        if (level) {\n            return this.logBuffer.filter((entry)=>entry.level === level);\n        }\n        return [\n            ...this.logBuffer\n        ];\n    }\n    // Funcție pentru curățarea buffer-ului\n    clearLogs() {\n        this.logBuffer = [];\n    }\n    // Funcție pentru exportul logurilor\n    exportLogs() {\n        return this.logBuffer.map((entry)=>this.formatMessage(entry)).join(\"\\n\");\n    }\n    constructor(){\n        this.isDevelopment = \"development\" === \"development\";\n        this.isProduction = \"development\" === \"production\";\n        this.logBuffer = [];\n        this.maxBufferSize = 100;\n    }\n}\n// Instanță globală a logger-ului\nconst logger = new SecureLogger();\n// Funcții helper pentru logging rapid\nconst logError = (message, context, error)=>logger.error(message, context, error);\nconst logWarn = (message, context)=>logger.warn(message, context);\nconst logInfo = (message, context)=>logger.info(message, context);\nconst logDebug = (message, context)=>logger.debug(message, context);\nconst logSecurity = (message, context)=>logger.security(message, context);\nconst logPerformance = (operation, duration, context)=>logger.performance(operation, duration, context);\n// Funcție pentru înlocuirea console.log global\nfunction replaceConsoleLogs() {\n    if (false) {}\n    return {\n        restore: ()=>{}\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/rate-limit.ts":
/*!***************************!*\
  !*** ./lib/rate-limit.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RATE_LIMIT_CONFIGS: () => (/* binding */ RATE_LIMIT_CONFIGS),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit),\n/* harmony export */   rateLimitByEndpoint: () => (/* binding */ rateLimitByEndpoint),\n/* harmony export */   rateLimitByIP: () => (/* binding */ rateLimitByIP),\n/* harmony export */   rateLimitByUser: () => (/* binding */ rateLimitByUser),\n/* harmony export */   rateLimitRedis: () => (/* binding */ rateLimitRedis),\n/* harmony export */   withRateLimit: () => (/* binding */ withRateLimit)\n/* harmony export */ });\n// In-memory store for development (replace with Redis in production)\nconst rateLimitStore = new Map();\nasync function rateLimit(identifier, config) {\n    const now = Date.now();\n    const windowStart = now - config.windowMs;\n    // Get current rate limit data\n    const current = rateLimitStore.get(identifier);\n    if (!current || current.resetTime < now) {\n        // First request or window expired\n        rateLimitStore.set(identifier, {\n            count: 1,\n            resetTime: now + config.windowMs\n        });\n        return {\n            success: true,\n            remaining: config.max - 1,\n            resetTime: now + config.windowMs\n        };\n    }\n    if (current.count >= config.max) {\n        // Rate limit exceeded\n        return {\n            success: false,\n            remaining: 0,\n            resetTime: current.resetTime,\n            message: config.message\n        };\n    }\n    // Increment count\n    current.count++;\n    rateLimitStore.set(identifier, current);\n    return {\n        success: true,\n        remaining: config.max - current.count,\n        resetTime: current.resetTime\n    };\n}\n// Cleanup expired entries every hour\nsetInterval(()=>{\n    const now = Date.now();\n    const entries = Array.from(rateLimitStore.entries());\n    for (const [key, value] of entries){\n        if (value.resetTime < now) {\n            rateLimitStore.delete(key);\n        }\n    }\n}, 60 * 60 * 1000);\n// Production Redis implementation\nasync function rateLimitRedis(identifier, config) {\n    // This would use Redis in production\n    // For now, fallback to in-memory\n    return rateLimit(identifier, config);\n}\n// IP-based rate limiting\nasync function rateLimitByIP(ip, config) {\n    return rateLimit(`ip:${ip}`, config);\n}\n// User-based rate limiting\nasync function rateLimitByUser(userId, config) {\n    return rateLimit(`user:${userId}`, config);\n}\n// Rate limit configurations\nconst RATE_LIMIT_CONFIGS = {\n    auth: {\n        windowMs: 15 * 60 * 1000,\n        max: 5,\n        message: \"Too many authentication attempts, please try again later\",\n        standardHeaders: true,\n        legacyHeaders: false\n    },\n    api: {\n        windowMs: 60 * 1000,\n        max: 100,\n        message: \"Too many requests, please try again later\",\n        standardHeaders: true,\n        legacyHeaders: false\n    },\n    checkout: {\n        windowMs: 60 * 1000,\n        max: 3,\n        message: \"Too many checkout attempts, please try again later\",\n        standardHeaders: true,\n        legacyHeaders: false\n    }\n};\n// Higher-order function for rate limiting\nfunction withRateLimit(config, identifierFn) {\n    return function(handler) {\n        return async function(req, ...args) {\n            const identifier = identifierFn(req);\n            const result = await rateLimit(identifier, config);\n            if (!result.success) {\n                return new Response(JSON.stringify({\n                    error: result.message\n                }), {\n                    status: 429,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n            return handler(req, ...args);\n        };\n    };\n}\n// Endpoint-based rate limiting\nasync function rateLimitByEndpoint(endpoint, identifier, config) {\n    return rateLimit(`${endpoint}:${identifier}`, config);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcmF0ZS1saW1pdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBaUJBLHFFQUFxRTtBQUNyRSxNQUFNQSxpQkFBaUIsSUFBSUM7QUFFcEIsZUFBZUMsVUFDcEJDLFVBQWtCLEVBQ2xCQyxNQUF1QjtJQUV2QixNQUFNQyxNQUFNQyxLQUFLRCxHQUFHO0lBQ3BCLE1BQU1FLGNBQWNGLE1BQU1ELE9BQU9JLFFBQVE7SUFFekMsOEJBQThCO0lBQzlCLE1BQU1DLFVBQVVULGVBQWVVLEdBQUcsQ0FBQ1A7SUFFbkMsSUFBSSxDQUFDTSxXQUFXQSxRQUFRRSxTQUFTLEdBQUdOLEtBQUs7UUFDdkMsa0NBQWtDO1FBQ2xDTCxlQUFlWSxHQUFHLENBQUNULFlBQVk7WUFDN0JVLE9BQU87WUFDUEYsV0FBV04sTUFBTUQsT0FBT0ksUUFBUTtRQUNsQztRQUVBLE9BQU87WUFDTE0sU0FBUztZQUNUQyxXQUFXWCxPQUFPWSxHQUFHLEdBQUc7WUFDeEJMLFdBQVdOLE1BQU1ELE9BQU9JLFFBQVE7UUFDbEM7SUFDRjtJQUVBLElBQUlDLFFBQVFJLEtBQUssSUFBSVQsT0FBT1ksR0FBRyxFQUFFO1FBQy9CLHNCQUFzQjtRQUN0QixPQUFPO1lBQ0xGLFNBQVM7WUFDVEMsV0FBVztZQUNYSixXQUFXRixRQUFRRSxTQUFTO1lBQzVCTSxTQUFTYixPQUFPYSxPQUFPO1FBQ3pCO0lBQ0Y7SUFFQSxrQkFBa0I7SUFDbEJSLFFBQVFJLEtBQUs7SUFDYmIsZUFBZVksR0FBRyxDQUFDVCxZQUFZTTtJQUUvQixPQUFPO1FBQ0xLLFNBQVM7UUFDVEMsV0FBV1gsT0FBT1ksR0FBRyxHQUFHUCxRQUFRSSxLQUFLO1FBQ3JDRixXQUFXRixRQUFRRSxTQUFTO0lBQzlCO0FBQ0Y7QUFFQSxxQ0FBcUM7QUFDckNPLFlBQVk7SUFDVixNQUFNYixNQUFNQyxLQUFLRCxHQUFHO0lBQ3BCLE1BQU1jLFVBQVVDLE1BQU1DLElBQUksQ0FBQ3JCLGVBQWVtQixPQUFPO0lBQ2pELEtBQUssTUFBTSxDQUFDRyxLQUFLQyxNQUFNLElBQUlKLFFBQVM7UUFDbEMsSUFBSUksTUFBTVosU0FBUyxHQUFHTixLQUFLO1lBQ3pCTCxlQUFld0IsTUFBTSxDQUFDRjtRQUN4QjtJQUNGO0FBQ0YsR0FBRyxLQUFLLEtBQUs7QUFFYixrQ0FBa0M7QUFDM0IsZUFBZUcsZUFDcEJ0QixVQUFrQixFQUNsQkMsTUFBdUI7SUFFdkIscUNBQXFDO0lBQ3JDLGlDQUFpQztJQUNqQyxPQUFPRixVQUFVQyxZQUFZQztBQUMvQjtBQUVBLHlCQUF5QjtBQUNsQixlQUFlc0IsY0FDcEJDLEVBQVUsRUFDVnZCLE1BQXVCO0lBRXZCLE9BQU9GLFVBQVUsQ0FBQyxHQUFHLEVBQUV5QixHQUFHLENBQUMsRUFBRXZCO0FBQy9CO0FBRUEsMkJBQTJCO0FBQ3BCLGVBQWV3QixnQkFDcEJDLE1BQWMsRUFDZHpCLE1BQXVCO0lBRXZCLE9BQU9GLFVBQVUsQ0FBQyxLQUFLLEVBQUUyQixPQUFPLENBQUMsRUFBRXpCO0FBQ3JDO0FBRUEsNEJBQTRCO0FBQ3JCLE1BQU0wQixxQkFBcUI7SUFDaENDLE1BQU07UUFDSnZCLFVBQVUsS0FBSyxLQUFLO1FBQ3BCUSxLQUFLO1FBQ0xDLFNBQVM7UUFDVGUsaUJBQWlCO1FBQ2pCQyxlQUFlO0lBQ2pCO0lBQ0FDLEtBQUs7UUFDSDFCLFVBQVUsS0FBSztRQUNmUSxLQUFLO1FBQ0xDLFNBQVM7UUFDVGUsaUJBQWlCO1FBQ2pCQyxlQUFlO0lBQ2pCO0lBQ0FFLFVBQVU7UUFDUjNCLFVBQVUsS0FBSztRQUNmUSxLQUFLO1FBQ0xDLFNBQVM7UUFDVGUsaUJBQWlCO1FBQ2pCQyxlQUFlO0lBQ2pCO0FBQ0YsRUFBVztBQUVYLDBDQUEwQztBQUNuQyxTQUFTRyxjQUNkaEMsTUFBdUIsRUFDdkJpQyxZQUFzQztJQUV0QyxPQUFPLFNBQVNDLE9BQVU7UUFDeEIsT0FBTyxlQUFlQyxHQUFZLEVBQUUsR0FBR0MsSUFBbUI7WUFDeEQsTUFBTXJDLGFBQWFrQyxhQUFhRTtZQUNoQyxNQUFNRSxTQUFTLE1BQU12QyxVQUFVQyxZQUFZQztZQUUzQyxJQUFJLENBQUNxQyxPQUFPM0IsT0FBTyxFQUFFO2dCQUNuQixPQUFPLElBQUk0QixTQUNUQyxLQUFLQyxTQUFTLENBQUM7b0JBQUVDLE9BQU9KLE9BQU94QixPQUFPO2dCQUFDLElBQ3ZDO29CQUNFNkIsUUFBUTtvQkFDUkMsU0FBUzt3QkFBRSxnQkFBZ0I7b0JBQW1CO2dCQUNoRDtZQUVKO1lBRUEsT0FBT1QsUUFBUUMsUUFBUUM7UUFDekI7SUFDRjtBQUNGO0FBRUEsK0JBQStCO0FBQ3hCLGVBQWVRLG9CQUNwQkMsUUFBZ0IsRUFDaEI5QyxVQUFrQixFQUNsQkMsTUFBdUI7SUFFdkIsT0FBT0YsVUFBVSxDQUFDLEVBQUUrQyxTQUFTLENBQUMsRUFBRTlDLFdBQVcsQ0FBQyxFQUFFQztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLXByb21wdC10ZW1wbGF0ZXMvLi9saWIvcmF0ZS1saW1pdC50cz8yMmM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmludGVyZmFjZSBSYXRlTGltaXRDb25maWcge1xuICB3aW5kb3dNczogbnVtYmVyO1xuICBtYXg6IG51bWJlcjtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBzdGFuZGFyZEhlYWRlcnM6IGJvb2xlYW47XG4gIGxlZ2FjeUhlYWRlcnM6IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBSYXRlTGltaXRSZXN1bHQge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICByZW1haW5pbmc6IG51bWJlcjtcbiAgcmVzZXRUaW1lOiBudW1iZXI7XG4gIG1lc3NhZ2U/OiBzdHJpbmc7XG59XG5cbi8vIEluLW1lbW9yeSBzdG9yZSBmb3IgZGV2ZWxvcG1lbnQgKHJlcGxhY2Ugd2l0aCBSZWRpcyBpbiBwcm9kdWN0aW9uKVxuY29uc3QgcmF0ZUxpbWl0U3RvcmUgPSBuZXcgTWFwPHN0cmluZywgeyBjb3VudDogbnVtYmVyOyByZXNldFRpbWU6IG51bWJlciB9PigpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmF0ZUxpbWl0KFxuICBpZGVudGlmaWVyOiBzdHJpbmcsXG4gIGNvbmZpZzogUmF0ZUxpbWl0Q29uZmlnXG4pOiBQcm9taXNlPFJhdGVMaW1pdFJlc3VsdD4ge1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBjb25zdCB3aW5kb3dTdGFydCA9IG5vdyAtIGNvbmZpZy53aW5kb3dNcztcbiAgXG4gIC8vIEdldCBjdXJyZW50IHJhdGUgbGltaXQgZGF0YVxuICBjb25zdCBjdXJyZW50ID0gcmF0ZUxpbWl0U3RvcmUuZ2V0KGlkZW50aWZpZXIpO1xuICBcbiAgaWYgKCFjdXJyZW50IHx8IGN1cnJlbnQucmVzZXRUaW1lIDwgbm93KSB7XG4gICAgLy8gRmlyc3QgcmVxdWVzdCBvciB3aW5kb3cgZXhwaXJlZFxuICAgIHJhdGVMaW1pdFN0b3JlLnNldChpZGVudGlmaWVyLCB7XG4gICAgICBjb3VudDogMSxcbiAgICAgIHJlc2V0VGltZTogbm93ICsgY29uZmlnLndpbmRvd01zXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICByZW1haW5pbmc6IGNvbmZpZy5tYXggLSAxLFxuICAgICAgcmVzZXRUaW1lOiBub3cgKyBjb25maWcud2luZG93TXNcbiAgICB9O1xuICB9XG4gIFxuICBpZiAoY3VycmVudC5jb3VudCA+PSBjb25maWcubWF4KSB7XG4gICAgLy8gUmF0ZSBsaW1pdCBleGNlZWRlZFxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIHJlbWFpbmluZzogMCxcbiAgICAgIHJlc2V0VGltZTogY3VycmVudC5yZXNldFRpbWUsXG4gICAgICBtZXNzYWdlOiBjb25maWcubWVzc2FnZVxuICAgIH07XG4gIH1cbiAgXG4gIC8vIEluY3JlbWVudCBjb3VudFxuICBjdXJyZW50LmNvdW50Kys7XG4gIHJhdGVMaW1pdFN0b3JlLnNldChpZGVudGlmaWVyLCBjdXJyZW50KTtcbiAgXG4gIHJldHVybiB7XG4gICAgc3VjY2VzczogdHJ1ZSxcbiAgICByZW1haW5pbmc6IGNvbmZpZy5tYXggLSBjdXJyZW50LmNvdW50LFxuICAgIHJlc2V0VGltZTogY3VycmVudC5yZXNldFRpbWVcbiAgfTtcbn1cblxuLy8gQ2xlYW51cCBleHBpcmVkIGVudHJpZXMgZXZlcnkgaG91clxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBjb25zdCBlbnRyaWVzID0gQXJyYXkuZnJvbShyYXRlTGltaXRTdG9yZS5lbnRyaWVzKCkpO1xuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBlbnRyaWVzKSB7XG4gICAgaWYgKHZhbHVlLnJlc2V0VGltZSA8IG5vdykge1xuICAgICAgcmF0ZUxpbWl0U3RvcmUuZGVsZXRlKGtleSk7XG4gICAgfVxuICB9XG59LCA2MCAqIDYwICogMTAwMCk7XG5cbi8vIFByb2R1Y3Rpb24gUmVkaXMgaW1wbGVtZW50YXRpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByYXRlTGltaXRSZWRpcyhcbiAgaWRlbnRpZmllcjogc3RyaW5nLFxuICBjb25maWc6IFJhdGVMaW1pdENvbmZpZ1xuKTogUHJvbWlzZTxSYXRlTGltaXRSZXN1bHQ+IHtcbiAgLy8gVGhpcyB3b3VsZCB1c2UgUmVkaXMgaW4gcHJvZHVjdGlvblxuICAvLyBGb3Igbm93LCBmYWxsYmFjayB0byBpbi1tZW1vcnlcbiAgcmV0dXJuIHJhdGVMaW1pdChpZGVudGlmaWVyLCBjb25maWcpO1xufVxuXG4vLyBJUC1iYXNlZCByYXRlIGxpbWl0aW5nXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmF0ZUxpbWl0QnlJUChcbiAgaXA6IHN0cmluZyxcbiAgY29uZmlnOiBSYXRlTGltaXRDb25maWdcbik6IFByb21pc2U8UmF0ZUxpbWl0UmVzdWx0PiB7XG4gIHJldHVybiByYXRlTGltaXQoYGlwOiR7aXB9YCwgY29uZmlnKTtcbn1cblxuLy8gVXNlci1iYXNlZCByYXRlIGxpbWl0aW5nXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmF0ZUxpbWl0QnlVc2VyKFxuICB1c2VySWQ6IHN0cmluZyxcbiAgY29uZmlnOiBSYXRlTGltaXRDb25maWdcbik6IFByb21pc2U8UmF0ZUxpbWl0UmVzdWx0PiB7XG4gIHJldHVybiByYXRlTGltaXQoYHVzZXI6JHt1c2VySWR9YCwgY29uZmlnKTtcbn1cblxuLy8gUmF0ZSBsaW1pdCBjb25maWd1cmF0aW9uc1xuZXhwb3J0IGNvbnN0IFJBVEVfTElNSVRfQ09ORklHUyA9IHtcbiAgYXV0aDoge1xuICAgIHdpbmRvd01zOiAxNSAqIDYwICogMTAwMCwgLy8gMTUgbWludXRlc1xuICAgIG1heDogNSwgLy8gNSBhdHRlbXB0c1xuICAgIG1lc3NhZ2U6ICdUb28gbWFueSBhdXRoZW50aWNhdGlvbiBhdHRlbXB0cywgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlcicsXG4gICAgc3RhbmRhcmRIZWFkZXJzOiB0cnVlLFxuICAgIGxlZ2FjeUhlYWRlcnM6IGZhbHNlLFxuICB9LFxuICBhcGk6IHtcbiAgICB3aW5kb3dNczogNjAgKiAxMDAwLCAvLyAxIG1pbnV0ZVxuICAgIG1heDogMTAwLCAvLyAxMDAgcmVxdWVzdHNcbiAgICBtZXNzYWdlOiAnVG9vIG1hbnkgcmVxdWVzdHMsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXInLFxuICAgIHN0YW5kYXJkSGVhZGVyczogdHJ1ZSxcbiAgICBsZWdhY3lIZWFkZXJzOiBmYWxzZSxcbiAgfSxcbiAgY2hlY2tvdXQ6IHtcbiAgICB3aW5kb3dNczogNjAgKiAxMDAwLCAvLyAxIG1pbnV0ZVxuICAgIG1heDogMywgLy8gMyBjaGVja291dCBhdHRlbXB0c1xuICAgIG1lc3NhZ2U6ICdUb28gbWFueSBjaGVja291dCBhdHRlbXB0cywgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlcicsXG4gICAgc3RhbmRhcmRIZWFkZXJzOiB0cnVlLFxuICAgIGxlZ2FjeUhlYWRlcnM6IGZhbHNlLFxuICB9LFxufSBhcyBjb25zdDtcblxuLy8gSGlnaGVyLW9yZGVyIGZ1bmN0aW9uIGZvciByYXRlIGxpbWl0aW5nXG5leHBvcnQgZnVuY3Rpb24gd2l0aFJhdGVMaW1pdDxUIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+KFxuICBjb25maWc6IFJhdGVMaW1pdENvbmZpZyxcbiAgaWRlbnRpZmllckZuOiAocmVxOiBSZXF1ZXN0KSA9PiBzdHJpbmdcbikge1xuICByZXR1cm4gZnVuY3Rpb24oaGFuZGxlcjogVCkge1xuICAgIHJldHVybiBhc3luYyBmdW5jdGlvbihyZXE6IFJlcXVlc3QsIC4uLmFyZ3M6IFBhcmFtZXRlcnM8VD4pIHtcbiAgICAgIGNvbnN0IGlkZW50aWZpZXIgPSBpZGVudGlmaWVyRm4ocmVxKTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJhdGVMaW1pdChpZGVudGlmaWVyLCBjb25maWcpO1xuICAgICAgXG4gICAgICBpZiAoIXJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogcmVzdWx0Lm1lc3NhZ2UgfSksXG4gICAgICAgICAgeyBcbiAgICAgICAgICAgIHN0YXR1czogNDI5LFxuICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiBoYW5kbGVyKHJlcSwgLi4uYXJncyk7XG4gICAgfTtcbiAgfTtcbn1cblxuLy8gRW5kcG9pbnQtYmFzZWQgcmF0ZSBsaW1pdGluZ1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJhdGVMaW1pdEJ5RW5kcG9pbnQoXG4gIGVuZHBvaW50OiBzdHJpbmcsXG4gIGlkZW50aWZpZXI6IHN0cmluZyxcbiAgY29uZmlnOiBSYXRlTGltaXRDb25maWdcbik6IFByb21pc2U8UmF0ZUxpbWl0UmVzdWx0PiB7XG4gIHJldHVybiByYXRlTGltaXQoYCR7ZW5kcG9pbnR9OiR7aWRlbnRpZmllcn1gLCBjb25maWcpO1xufVxuIl0sIm5hbWVzIjpbInJhdGVMaW1pdFN0b3JlIiwiTWFwIiwicmF0ZUxpbWl0IiwiaWRlbnRpZmllciIsImNvbmZpZyIsIm5vdyIsIkRhdGUiLCJ3aW5kb3dTdGFydCIsIndpbmRvd01zIiwiY3VycmVudCIsImdldCIsInJlc2V0VGltZSIsInNldCIsImNvdW50Iiwic3VjY2VzcyIsInJlbWFpbmluZyIsIm1heCIsIm1lc3NhZ2UiLCJzZXRJbnRlcnZhbCIsImVudHJpZXMiLCJBcnJheSIsImZyb20iLCJrZXkiLCJ2YWx1ZSIsImRlbGV0ZSIsInJhdGVMaW1pdFJlZGlzIiwicmF0ZUxpbWl0QnlJUCIsImlwIiwicmF0ZUxpbWl0QnlVc2VyIiwidXNlcklkIiwiUkFURV9MSU1JVF9DT05GSUdTIiwiYXV0aCIsInN0YW5kYXJkSGVhZGVycyIsImxlZ2FjeUhlYWRlcnMiLCJhcGkiLCJjaGVja291dCIsIndpdGhSYXRlTGltaXQiLCJpZGVudGlmaWVyRm4iLCJoYW5kbGVyIiwicmVxIiwiYXJncyIsInJlc3VsdCIsIlJlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yIiwic3RhdHVzIiwiaGVhZGVycyIsInJhdGVMaW1pdEJ5RW5kcG9pbnQiLCJlbmRwb2ludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/rate-limit.ts\n");

/***/ }),

/***/ "(rsc)/./lib/validation.ts":
/*!***************************!*\
  !*** ./lib/validation.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthSchema: () => (/* binding */ AuthSchema),\n/* harmony export */   PromptSchema: () => (/* binding */ PromptSchema),\n/* harmony export */   PromptUpdateSchema: () => (/* binding */ PromptUpdateSchema),\n/* harmony export */   SearchSchema: () => (/* binding */ SearchSchema),\n/* harmony export */   StripeCheckoutSchema: () => (/* binding */ StripeCheckoutSchema),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidPrice: () => (/* binding */ isValidPrice),\n/* harmony export */   isValidUUID: () => (/* binding */ isValidUUID),\n/* harmony export */   sanitizeHtml: () => (/* binding */ sanitizeHtml),\n/* harmony export */   validateAndSanitize: () => (/* binding */ validateAndSanitize)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/zod/v3/types.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/zod/v3/ZodError.js\");\n\n// Schema de bază pentru prompt-uri\nconst PromptSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    title: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Title is required\").max(200, \"Title must be less than 200 characters\").regex(/^[a-zA-Z0-9\\s\\-_.,!?()]+$/, \"Title contains invalid characters\"),\n    cognitive_category: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"deep_analysis\",\n        \"meaning_engineering\",\n        \"cognitive_frameworks\",\n        \"consciousness_mapping\",\n        \"advanced_systems\"\n    ]),\n    difficulty_tier: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"foundation\",\n        \"advanced\",\n        \"expert\",\n        \"architect\"\n    ]),\n    preview_content: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(10, \"Preview content must be at least 10 characters\").max(1000, \"Preview content must be less than 1000 characters\").refine((content)=>!content.includes(\"<script\"), \"Preview content contains invalid HTML\"),\n    full_content: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(50, \"Full content must be at least 50 characters\").max(50000, \"Full content must be less than 50000 characters\").refine((content)=>!content.includes(\"<script\"), \"Full content contains invalid HTML\"),\n    cognitive_depth_score: zod__WEBPACK_IMPORTED_MODULE_0__.number().int(\"Cognitive depth score must be an integer\").min(1, \"Cognitive depth score must be at least 1\").max(10, \"Cognitive depth score must be at most 10\"),\n    pattern_complexity: zod__WEBPACK_IMPORTED_MODULE_0__.number().int(\"Pattern complexity must be an integer\").min(1, \"Pattern complexity must be at least 1\").max(5, \"Pattern complexity must be at most 5\"),\n    base_price_cents: zod__WEBPACK_IMPORTED_MODULE_0__.number().int(\"Price must be an integer\").min(100, \"Price must be at least 100 cents (€1)\").max(100000, \"Price must be at most 100000 cents (€1000)\"),\n    meaning_layers: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).min(1, \"At least one meaning layer is required\").max(10, \"Maximum 10 meaning layers allowed\").refine((layers)=>layers.every((layer)=>layer.length >= 3 && layer.length <= 500 && !layer.includes(\"<script\")), \"Meaning layers contain invalid content\"),\n    anti_surface_features: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).min(1, \"At least one anti-surface feature is required\").max(10, \"Maximum 10 anti-surface features allowed\").refine((features)=>features.every((feature)=>feature.length >= 3 && feature.length <= 500 && !feature.includes(\"<script\")), \"Anti-surface features contain invalid content\"),\n    required_tier: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"free\",\n        \"explorer\",\n        \"architect\",\n        \"initiate\",\n        \"master\",\n        \"elite\"\n    ]).default(\"free\"),\n    is_published: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().default(false),\n    quality_score: zod__WEBPACK_IMPORTED_MODULE_0__.number().int(\"Quality score must be an integer\").min(1, \"Quality score must be at least 1\").max(10, \"Quality score must be at most 10\").default(5),\n    meta_tags: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).max(20, \"Maximum 20 meta tags allowed\").default([]),\n    keywords: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).max(50, \"Maximum 50 keywords allowed\").default([])\n});\n// Schema pentru actualizări (toate câmpurile opționale)\nconst PromptUpdateSchema = PromptSchema.partial().extend({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid(\"Invalid prompt ID format\"),\n    updated_at: zod__WEBPACK_IMPORTED_MODULE_0__.string().datetime().optional()\n});\n// Schema pentru autentificare\nconst AuthSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.string().email(\"Invalid email format\").min(5, \"Email too short\").max(254, \"Email too long\"),\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(8, \"Password must be at least 8 characters\").max(128, \"Password too long\").regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, \"Password must contain lowercase, uppercase and number\"),\n    action: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"signin\",\n        \"signup\"\n    ])\n});\n// Schema pentru Stripe checkout\nconst StripeCheckoutSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    tier: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"free\",\n        \"explorer\",\n        \"architect\",\n        \"initiate\",\n        \"master\",\n        \"elite\"\n    ]),\n    userId: zod__WEBPACK_IMPORTED_MODULE_0__.string().uuid(\"Invalid user ID format\")\n});\n// Schema pentru search și filtrare\nconst SearchSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    search: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, \"Search query too long\").optional(),\n    category: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"deep_analysis\",\n        \"meaning_engineering\",\n        \"cognitive_frameworks\",\n        \"consciousness_mapping\",\n        \"advanced_systems\"\n    ]).optional(),\n    tier: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"free\",\n        \"explorer\",\n        \"architect\",\n        \"initiate\",\n        \"master\",\n        \"elite\"\n    ]).default(\"free\"),\n    difficulty: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"foundation\",\n        \"advanced\",\n        \"expert\",\n        \"architect\"\n    ]).optional(),\n    minPrice: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(0).optional(),\n    maxPrice: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(0).optional(),\n    minScore: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(1).max(10).optional(),\n    maxScore: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(1).max(10).optional()\n});\n// Funcție de validare cu sanitizare\nfunction validateAndSanitize(schema, data) {\n    try {\n        const validatedData = schema.parse(data);\n        return {\n            success: true,\n            data: validatedData\n        };\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_1__.ZodError) {\n            const errors = error.issues.map((err)=>`${err.path.join(\".\")}: ${err.message}`);\n            return {\n                success: false,\n                errors\n            };\n        }\n        return {\n            success: false,\n            errors: [\n                \"Validation failed\"\n            ]\n        };\n    }\n}\n// Funcție de sanitizare HTML\nfunction sanitizeHtml(input) {\n    return input.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\").replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, \"\").replace(/<object\\b[^<]*(?:(?!<\\/object>)<[^<]*)*<\\/object>/gi, \"\").replace(/<embed\\b[^<]*(?:(?!<\\/embed>)<[^<]*)*<\\/embed>/gi, \"\").replace(/javascript:/gi, \"\").replace(/on\\w+\\s*=/gi, \"\");\n}\n// Funcție de validare UUID\nfunction isValidUUID(uuid) {\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    return uuidRegex.test(uuid);\n}\n// Funcție de validare email\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n// Funcție de validare preț\nfunction isValidPrice(price) {\n    return Number.isInteger(price) && price >= 100 && price <= 100000;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/validation.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprompts%2Froute&page=%2Fapi%2Fprompts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprompts%2Froute.ts&appDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fvadimcusnir%2FGitRepo%2Fai-prompt-templates%2Fpackages%2Fai-prompt-templates&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();