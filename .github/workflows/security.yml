name: Security & Compliance

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Rulează teste de securitate zilnic la 2:00 UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm run security:audit
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true

  dependency-vulnerability-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    needs: security-scan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high
        
      - name: Check for outdated packages
        run: npm outdated || true
        
      - name: Check for unused dependencies
        run: npm run deps:check

  code-security-analysis:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    needs: dependency-vulnerability-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint security rules
        run: npm run lint
        
      - name: Check for hardcoded secrets
        run: |
          echo "Checking for hardcoded secrets..."
          # Aici poți adăuga logica pentru verificarea secretelor hardcodate
          echo "Secret check completed"

  compliance-check:
    name: Compliance Check
    runs-on: ubuntu-latest
    needs: code-security-analysis
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run compliance checks
        run: |
          echo "Running compliance checks..."
          # Aici poți adăuga logica pentru verificarea compliance-ului
          echo "Compliance checks completed"
        
      - name: Upload compliance report
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report/
          retention-days: 90

  security-notification:
    name: Security Notification
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-vulnerability-check, code-security-analysis, compliance-check]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Send security notifications
        run: |
          echo "Sending security notifications..."
          # Aici poți adăuga logica pentru trimiterea notificărilor de securitate
          echo "Security notifications sent"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  security-report:
    name: Security Report
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-vulnerability-check, code-security-analysis, compliance-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate security report
        run: |
          echo "Generating security report..."
          # Aici poți adăuga logica pentru generarea raportului de securitate
          echo "Security report generated"
        
      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report/
          retention-days: 90

  security-optimization:
    name: Security Optimization
    runs-on: ubuntu-latest
    needs: security-report
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security optimization
        run: |
          echo "Running security optimization..."
          # Aici poți adăuga logica pentru optimizarea securității
          echo "Security optimization completed"
        
      - name: Upload security optimization report
        uses: actions/upload-artifact@v3
        with:
          name: security-optimization-report
          path: security-optimization-report/
          retention-days: 90

  compliance-summary:
    name: Compliance Summary
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-vulnerability-check, code-security-analysis, compliance-check, security-report, security-optimization]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate compliance summary
        run: |
          echo "Generating compliance summary..."
          # Aici poți adăuga logica pentru generarea sumarului de compliance
          echo "Compliance summary generated"
        
      - name: Upload compliance summary
        uses: actions/upload-artifact@v3
        with:
          name: compliance-summary
          path: compliance-summary/
          retention-days: 90
