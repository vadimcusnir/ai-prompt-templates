name: Deploy

on:
  push:
    branches: [main, develop]
  workflow_run:
    workflows: ["Quality & Testing"]
    types: [completed]
    branches: [main, develop]

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event.workflow_run.conclusion == 'success'
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy to development environment
        run: npm run deploy:dev || echo "Deploy script not configured"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_DEV }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_DEV }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_DEV }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY_DEV }}
          
      - name: Run smoke tests
        run: npm run test:smoke || echo "Smoke tests not configured"
        env:
          BASE_URL: ${{ secrets.DEV_BASE_URL }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy to production environment
        run: npm run deploy:prod || echo "Deploy script not configured"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PROD }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL_PROD }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_PROD }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY_PROD }}
          
      - name: Run production smoke tests
        run: npm run test:smoke || echo "Smoke tests not configured"
        env:
          BASE_URL: ${{ secrets.PROD_BASE_URL }}
          
      - name: Notify deployment success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: 'üöÄ Production deployment successful!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: [deploy-prod]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: npm run test:performance || echo "Performance tests not configured"
        env:
          BASE_URL: ${{ secrets.PROD_BASE_URL }}
          
      - name: Upload performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance-report/
          retention-days: 30

  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    needs: [deploy-prod, performance-check]
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Rollback to previous version
        run: npm run rollback || echo "Rollback script not configured"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PROD }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: Notify rollback
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '‚ö†Ô∏è Production deployment failed, rolled back to previous version'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
