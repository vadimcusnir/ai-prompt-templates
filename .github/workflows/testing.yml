name: Testing & Validation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests
        run: npm run test:ci
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run integration tests
        run: npm run test:integration || echo "Integration tests not configured"
        
      - name: Upload integration test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results
          path: integration-test-results/
          retention-days: 30

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run E2E tests
        run: npm run test:e2e
        
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: e2e-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: npm run test:performance || echo "Performance tests not configured"
        
      - name: Upload performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance-report/
          retention-days: 30

  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: performance-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run smoke tests
        run: npm run test:smoke || echo "Smoke tests not configured"
        
      - name: Upload smoke test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: smoke-test-results
          path: smoke-test-results/
          retention-days: 30

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run accessibility tests
        run: |
          echo "Running accessibility tests..."
          # Aici poți adăuga logica pentru testarea accesibilității
          echo "Accessibility tests completed"
        
      - name: Upload accessibility test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-test-results
          path: accessibility-test-results/
          retention-days: 30

  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, performance-tests, smoke-tests, accessibility-tests]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate test report
        run: |
          echo "Generating test report..."
          # Aici poți adăuga logica pentru generarea raportului de teste
          echo "Test report generated"
        
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report/
          retention-days: 30

  test-notification:
    name: Test Notification
    runs-on: ubuntu-latest
    needs: test-report
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Send test notifications
        run: |
          echo "Sending test notifications..."
          # Aici poți adăuga logica pentru trimiterea notificărilor despre teste
          echo "Test notifications sent"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test-optimization:
    name: Test Optimization
    runs-on: ubuntu-latest
    needs: test-report
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run test optimization
        run: |
          echo "Running test optimization..."
          # Aici poți adăuga logica pentru optimizarea testelor
          echo "Test optimization completed"
        
      - name: Upload test optimization report
        uses: actions/upload-artifact@v3
        with:
          name: test-optimization-report
          path: test-optimization-report/
          retention-days: 30

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, performance-tests, smoke-tests, accessibility-tests, test-report, test-optimization]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          npm-version: '10'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate test summary
        run: |
          echo "Generating test summary..."
          # Aici poți adăuga logica pentru generarea sumarului de teste
          echo "Test summary generated"
        
      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary/
          retention-days: 30
